//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VideoMotionDetect.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VideoMotionDetect.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem caused motion detection to be aborted:
        ///
        ///{0}.
        /// </summary>
        internal static string BackgroundWorkerError {
            get {
                return ResourceManager.GetString("BackgroundWorkerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:n0} remaining.
        /// </summary>
        internal static string FilesRemainingCount {
            get {
                return ResourceManager.GetString("FilesRemainingCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:n0} file(s).
        /// </summary>
        internal static string FilesSelectedCount {
            get {
                return ResourceManager.GetString("FilesSelectedCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Video motion detection has finished.
        ///
        ///Time taken: {0}.
        /// </summary>
        internal static string Finished {
            get {
                return ResourceManager.GetString("Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished.
        /// </summary>
        internal static string FinishedTitle {
            get {
                return ResourceManager.GetString("FinishedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Aborting this sequence..
        /// </summary>
        internal static string MotionDetectorAbortingSequence {
            get {
                return ResourceManager.GetString("MotionDetectorAbortingSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Changed pixels: {1}.
        /// </summary>
        internal static string MotionDetectorChangedPixels {
            get {
                return ResourceManager.GetString("MotionDetectorChangedPixels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Encountered an empty frame. Advancing to next frame and retrying..
        /// </summary>
        internal static string MotionDetectorEmptyFrame {
            get {
                return ResourceManager.GetString("MotionDetectorEmptyFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Could not read the video file..
        /// </summary>
        internal static string MotionDetectorFileCouldNotRead {
            get {
                return ResourceManager.GetString("MotionDetectorFileCouldNotRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Finished. Degree of activity: {1}.
        /// </summary>
        internal static string MotionDetectorFinished {
            get {
                return ResourceManager.GetString("MotionDetectorFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: *** Motion detected at {1:n0}s.
        /// </summary>
        internal static string MotionDetectorMotionDetected {
            get {
                return ResourceManager.GetString("MotionDetectorMotionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Did not manage to grab a non-empty frame from the video file..
        /// </summary>
        internal static string MotionDetectorNoFramesInVideo {
            get {
                return ResourceManager.GetString("MotionDetectorNoFramesInVideo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Sequence is increasing: {1}/{2}.
        /// </summary>
        internal static string MotionDetectorSequenceIncreasing {
            get {
                return ResourceManager.GetString("MotionDetectorSequenceIncreasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1:n0}/{2:n0} frames processed..
        /// </summary>
        internal static string MotionDetectorStatusLog {
            get {
                return ResourceManager.GetString("MotionDetectorStatusLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to clear the current region of interest?.
        /// </summary>
        internal static string NewROIPrompt {
            get {
                return ResourceManager.GetString("NewROIPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        internal static string NewROITitle {
            get {
                return ResourceManager.GetString("NewROITitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You did not set a region of interest. Motion detection will be performed on the entire content of each video frame. This is probably going to be slow.
        ///
        ///Is this what you want? If not, please click No and set a region of interest..
        /// </summary>
        internal static string NoROIMessage {
            get {
                return ResourceManager.GetString("NoROIMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You did not select any video files to perform motion detection on. Please click Browse and select one or more video files, then try again..
        /// </summary>
        internal static string NoVideosMessage {
            get {
                return ResourceManager.GetString("NoVideosMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred with the window for selecting the region of interest.
        ///
        ///{0}.
        /// </summary>
        internal static string OpenMaskFormError {
            get {
                return ResourceManager.GetString("OpenMaskFormError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred while trying to open the result file for writing:
        ///
        ///{0}.
        /// </summary>
        internal static string OpenResultFileError {
            get {
                return ResourceManager.GetString("OpenResultFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred while trying to open this region of interest:
        ///
        ///{0}.
        /// </summary>
        internal static string OpenROIError {
            get {
                return ResourceManager.GetString("OpenROIError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        internal static string OpenROITitle {
            get {
                return ResourceManager.GetString("OpenROITitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred while trying to save this region of interest:
        ///
        ///{0}.
        /// </summary>
        internal static string SaveROIError {
            get {
                return ResourceManager.GetString("SaveROIError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        internal static string SaveROITitle {
            get {
                return ResourceManager.GetString("SaveROITitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The region of interest you highlighted covers the entire frame. In this situation, simply not using a region of interest at all will be slightly faster.
        ///
        ///Is it okay to discard your region of interest?.
        /// </summary>
        internal static string SillyROIMessage {
            get {
                return ResourceManager.GetString("SillyROIMessage", resourceCulture);
            }
        }
    }
}
